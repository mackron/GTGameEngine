<!--
The editor is made up of 5 sections: Top, bottom, center, left and right. The center section is the main viewport.
-->

<style url="styles/theme.style" />

<script url="scripts/datafileswatcher.lua" />

<include url="common-controls.xml" />
<include url="dialogs.xml"         />

<include url="menubar.xml"       />
<include url="combobox.xml"      />

<style  url="styles/searchbox.style" />
<script url="scripts/searchbox.lua"  />

<style  url="styles/data-explorer.style" />
<script url="scripts/data-explorer.lua"  />

<style  url="styles/tabbar.style" />
<script url="scripts/tabbar.lua"  />

<style  url="styles/panel-groupbox.style" />
<script url="scripts/panel-groupbox.lua"  />

<script url="scripts/modeleditor-materialpanel.lua"   />
<script url="scripts/modeleditor-animationspanel.lua" />
<script url="scripts/modeleditor-cdpanel.lua"         />


<!-- In this section, the Editor table is created from the C++ code. Thus, ensure it is not re-created here. -->
<script>
<![CDATA[
    CommandTextBox:OnKeyDown(function(data)
        if data.key == 13 then                  -- Enter key
            if not Game.ExecuteScript(CommandTextBox:GetText()) then
                CommandErrorBox:SetStyle("text-color", "#a66");
                CommandErrorBox:SetText(Game.GetLastScriptError());
            else
                CommandErrorBox:SetStyle("text-color", "#999");
                CommandErrorBox:SetText("No errors.");
            end;
            
            CommandTextBox:SetText("");         -- Clear the box.
        else
            CommandErrorBox:SetText("");        -- Clears the output message.
        end;
    end);
]]>
</script>

<!-- Model Editor Dialog Box -->
<script>
<![CDATA[
    
    -- Saves an item based on it's file name.
    function Editor.SaveItem(path)
        if GTEngine.IsModelFile(path) then
            if not Editor.ModelEditor.SaveModel(path) then
                CommandErrorBox:SetText("Failed to save '" .. path .. "'");
            end
        end
    end
    
    -- Saves the current item.
    function Editor.SaveActiveItem()
        local activeTab = Editor_TabBar:GetActiveTab();
        if activeTab ~= nil and activeTab:IsModified() then
            Editor.SaveItem(activeTab.path);
            activeTab:UnmarkAsModified();
        end
    end
    
    -- Saves all open items.
    function Editor.SaveAllItems()
        for key,value in pairs(Editor_TabBar.Children) do
            if value:IsModified() then
                Editor.SaveItem(value.path);
                value:UnmarkAsModified();
            end
        end
    end
    
    
    -- Closes the current item.
    function Editor.CloseActiveItem()
        Editor_TabBar:RemoveActiveTab();
    end
    
    -- Closes all currently opened items.
    function Editor.CloseAllItems()
        Editor_TabBar:RemoveAllTabs();
    end
    
    
    -- This will keep track of the currently opened sub-editor.
    OpenedSubEditor   = nil;
    PreviousSubEditor = nil;
    
    
    -- Here we're going to watch for some keyboard shortcuts.
    EditorMain:WatchKeyPressed(function(data)
        if GTGUI.Server.IsCTRLKeyDown() then
            if data.key == GTGUI.Keys.S then
                Editor.SaveActiveItem();
            end
        end
    end)
    
    
    
    -- The menu bar.
    Editor_MenuBar:MenuBar();
    Editor_MenuBar.File = Editor_MenuBar:AppendItem("File");
    Editor_MenuBar.File.Save = Editor_MenuBar.File.menu:AppendItem("Save"):OnPressed(function()
        Editor.SaveActiveItem();
        Editor_MenuBar:CollapseMenu();
    end);
    Editor_MenuBar.File.SaveAll = Editor_MenuBar.File.menu:AppendItem("Save All"):OnPressed(function()
        Editor.SaveAllItems();
        Editor_MenuBar:CollapseMenu();
    end);
    Editor_MenuBar.File.menu:AppendSeparator();
    Editor_MenuBar.File.Close = Editor_MenuBar.File.menu:AppendItem("Close"):OnPressed(function()
        Editor.CloseActiveItem();
        Editor_MenuBar:CollapseMenu();
    end);
    Editor_MenuBar.File.CloseAll = Editor_MenuBar.File.menu:AppendItem("Close All"):OnPressed(function()
        Editor.CloseAllItems();
        Editor_MenuBar:CollapseMenu();
    end);
    Editor_MenuBar.File.menu:AppendSeparator();
    Editor_MenuBar.File.menu:AppendItem("Return to Game"):OnPressed(function()
        Editor_MenuBar:CollapseMenu();
        Editor.Close();
    end);
    Editor_MenuBar.File.menu:AppendSeparator();
    Editor_MenuBar.File.menu:AppendItem("Exit"):OnPressed(function()
        Game.Close();
    end);
    
    Editor_MenuBar.File.Save:Disable();
    Editor_MenuBar.File.SaveAll:Disable();
    Editor_MenuBar.File.Close:Disable();
    Editor_MenuBar.File.CloseAll:Disable();
    
    --Editor_MenuBar:AppendItem("Edit");
    --Editor_MenuBar:AppendItem("View");
    
    
    
    
    Editor_DataExplorer:DataExplorer();
    Editor_TabBar:TabBar();
    Editor_TabBar.OpenTabs = {};       -- Just contains the currently opened tabs, mapped to their file path.
    
    Editor_TabBar:OnTabAdded(function(data)
    end)
    
    Editor_TabBar:OnTabRemoved(function(data)
        if data.tab.path then
            Editor_TabBar.OpenTabs[data.tab.path] = nil;
        end
    end)
    
    
    -- The way we do tab switching is to only hide/show the sub editor if the new one is different to the old. The reason for this is that
    -- hiding a 3D viewport will cause a resize which will in turn cause a new framebuffer to be generated. Due to the multithreaded environment,
    -- this will cause a slight flicker.
    Editor_TabBar:OnTabActivated(function(data)
        -- We need to show the appropriate sub-editor. We determine this from the path.
        local filename = data.tab.path;
        if GTEngine.IsModelFile(filename) then
            OpenedSubEditor = Editor_ModelEditor;
            Editor.OnModelActivated(filename);
        elseif GTEngine.IsImageFile(filename) then
            OpenedSubEditor = Editor_ImageEditor;
            Editor.OnImageActivated(filename);
        else                                                        -- Assume a text file if nothing else.
            OpenedSubEditor = Editor_TextEditor;
            Editor.OnTextFileActivated(filename);
        end
        
        if OpenedSubEditor ~= PreviousSubEditor and PreviousSubEditor ~= nil then
            PreviousSubEditor:Hide();
        end
        
        if OpenedSubEditor ~= nil then
            OpenedSubEditor:Show();
        end
    end)
    
    Editor_TabBar:OnTabDeactivated(function(data)
        if OpenedSubEditor ~= nil then
            PreviousSubEditor = OpenedSubEditor;
            OpenedSubEditor   = nil;
        end
    end)
    
    
    
    

    Editor_ModelEditor_Panel:OnSize(function()
        Editor_ModelEditor_Panel_Scrollbar:SetPageSize(Editor_ModelEditor_Panel:GetHeight());
    end);
    
    Editor_ModelEditor_Panel_Body:OnSize(function()
        Editor_ModelEditor_Panel_Scrollbar:SetRange(Editor_ModelEditor_Panel_Body:GetHeight());
    end)
    
    
    Editor_ModelEditor_Panel_Scrollbar:VerticalScrollbar();
    Editor_ModelEditor_Panel_Scrollbar:EnableAutoVisibility();
    Editor_ModelEditor_Panel_Scrollbar:OnScroll(function(data)
        local offset = -data.position;
        Editor_ModelEditor_Panel_Body:SetStyle("inner-offset-y", tostring(offset));
    end)
    
    Editor_ModelEditor_Panel_Materials:ModelEditor_MaterialPanel();
    Editor_ModelEditor_Panel_Animations:ModelEditor_AnimationsPanel();
    Editor_ModelEditor_Panel_CD:ModelEditor_CDPanel();
    
    Editor_ModelEditor_Panel_Animations:Collapse();
    Editor_ModelEditor_Panel_CD:Collapse();
    
    
    Editor_TextEditor_TextBox:MultiLineTextBox();
]]>
</script>

<style>
    #EditorMain
    {
        width:   100%
        height:  100%
        
        flex-child-height:true
        
        background-color: #333
    }
    
    #EditorTopPanel
    {
        width:          100%
        height:         22px
        child-plane:    horizontal
        vertical-align: center
        padding-left:   4px
        
        border-bottom: 1px #2b2b2b
    }
    
    #EditorTopPanel_Left
    {
        width:          50%
        height:         100%
        child-plane:    horizontal
        vertical-align: center
    }
    
    #EditorTopPanel_Right
    {
        width:            50%
        height:           100%
        child-plane:      horizontal
        vertical-align:   center
        horizontal-align: right
    }
    
    
    #EditorBottomPanel
    {
        width:            100%
        height:           sidePanelSize
        child-plane:      horizontal
        background-color: #2a2a2a
        
        //border-top: 1px #2b2b2b
        
        vertical-align: center
    }
    
    #EditorCenterPanel
    {
        height:           100%
        width:            100%
        child-plane:      horizontal
        flex-child-width: true;
    }
    
    #EditorLeftPanel
    {
        width:               275px
        height:              100%
        allow-mouse-resize:  true
        right-gripper-width: 8px
        border-right:        2px #2a2a2a
        min-width:           32px
        flex-child-height:   true
    }
    
    #EditorCenterCenterPanel
    {
        visible:           false
    
        width:             100%
        height:            100%
        flex-child-height: true
    }
    
    #EditorTabPanel
    {
        width:            100%
        height:           22px
        background-color: #303030
    }
    
    #EditorBody
    {
        height:           100%
        background-color: #3c3c3c
        border:           1px #555
        
        padding:          4px
    }
</style>
    
<!--
The styles below are for sub-editors (model editor, image editor, etc). These are all located in the main body and are
hidden by default.
-->
<style>
    sub-editor
    {
        visible: false
    
        width:   100%
        height:  100%
    }
    
    #Editor_ModelEditor
    {
    }
    
    #Editor_ImageEditor
    {
        border: 1px #222
    }
</style>


<div id="EditorMain">
    <div id="EditorTopPanel">
        <!--
        The top panel is split into two parts. The left side contains the normal menu bar. The right side contains additional stuff
        such as the mode switcher.
        -->
        <div id="EditorTopPanel_Left">
            <div id="Editor_MenuBar" styleclass="menubar" />
        </div>
    </div>
    
    

    <!--
    The center panel is where individual editting tools can use their own GUIs.
    -->
    <div id="EditorCenterPanel">
        <div id="EditorLeftPanel">
            <div id='Editor_DataExplorer' styleclass='data-explorer' style='border-bottom:1px #555;' />
        </div>
        
        <div id="EditorCenterCenterPanel">
            <div id="EditorTabPanel">
                <div id='Editor_TabBar' styleclass='tabbar' style='height:100%;' />
            </div>
            <div id="EditorBody">
                <!-- Model Editor -->
                <div id="Editor_ModelEditor" styleclass='sub-editor' style='horizontal-align:right; flex-child-width:true; child-plane:horizontal;'>
                    <div id="Editor_ModelEditor_Viewport" style='width:100%;  height:100%; border:1px #222;'  />
                    <div id="Editor_ModelEditor_Panel"    style='width:250px; height:100%; border:1px #222; allow-mouse-resize:true; left-gripper-width:2px; min-width:32px; child-plane:horizontal; flex-child-width:true;'>
                        <div id="Editor_ModelEditor_Panel_Body">
                            <div id="Editor_ModelEditor_Panel_Materials" styleclass='panel-groupbox' />
                            <div styleclass='panel-groupbox-separator' />
                            <div id="Editor_ModelEditor_Panel_Animations" styleclass='panel-groupbox' />
                            <div styleclass='panel-groupbox-separator' />
                            <div id="Editor_ModelEditor_Panel_CD" styleclass='panel-groupbox' />
                        </div>
                        <div id="Editor_ModelEditor_Panel_Scrollbar" styleclass='vertical-scrollbar' style='visible:true' />
                    </div>
                </div>
                
                
                <!-- Image Editor -->
                <div id="Editor_ImageEditor" styleclass='sub-editor'>
                    <div id="Editor_ImageEditor_Viewport" style='width:100%; height:100%' />
                </div>
                
                
                <!-- Text Editor -->
                <div id="Editor_TextEditor" styleclass='sub-editor'>
                    <div id="Editor_TextEditor_TextBox" styleclass='multiline-textbox' style='width:100%; height:100%; border:1px #222; vertical-align:top; font-family:liberation mono; font-size:10pt;' />
                </div>
            </div>
        </div>
    </div>

    <div id="EditorBottomPanel">
        <div style="width:auto; margin-left:4px; margin-right:8px; text-color:#888;">Command:</div>
        <div id="CommandTextBox" styleclass="textbox" style="height:22px; width:400px;" />
        <div id="CommandErrorBox" style="height:100%; width:auto; margin-left:8px; vertical-align:center;" />
    </div>
  
    <!-- This section contains relative positioned controls. Usually dialog boxes. -->
</div>
